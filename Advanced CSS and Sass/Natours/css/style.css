/* COLORS---------------------------------------------------------------------------------------------------------------------------------------------------

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

/* BASIC SETUP--------------------------------------------------------------------------------------------------------------------------------------------------- */

/* Simple reset so it looks nice across browsers (before there was normalize.css and now theres this method: */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box; /* changes the box model so that the borders and the paddings are no longer added to the total width / height of the box */
}

/* setting project-wide font definitions for the project to inherit */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777;
    padding: 30px;
}

/* HEADER --------------------------------------------------------------------------------------------------------------------------------------------------- */

.header {
    height: 95vh; /* at any point the height of this box should be 95% of viewport height */
    background-image: linear-gradient(
        to right bottom, 
        rgba(126, 213, 111, 0.8), 
        rgba(40, 180, 131, 0.8)),
        url("../img/hero.jpg"); 
        /* basicly we have 2 background images: linear gradient going from light green to dark and then the other - image */
    background-size: cover; /* cover - tries to fit the element (img) inside of the box (header: 95vh) */
    background-position: top; /* ensures that not depending on the browser-screen size, the top of the image stays at the top of the container */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); /* defining the points where the header(image) is - 3 points stay the same and the bottom right changes*/
    position: relative;
}

.logo-box {
    position: absolute; /* the container(header) has to be relative */
    top: 40px;
    left: 40px;;
}

.logo {
    height: 35px;
}

.text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);  /* aboslute top 50% and left 50% make it so that the text box BEGINS at the 50% mark of the container and transform translate makes it that the center of the text-box begins at the 50% mark (the very center) */
    /* -50% are in relation not to the parent element but to the element itself, the element will be shifted half of its width and height to the left side and to the top */
}

.heading-primary {
    color: #ffffff;
    text-transform: uppercase;

    backface-visibility: hidden; /* removes the unwanted "shaking" effect from the animation */
}

.heading-primary-main {
    display: block; /* block elements occupy the entire width that they have available and create line breaks after and before them */
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out; /* how fast or how slow will happen the animations parametes (0% 80% 100%) ease-out - begins faster and it becomes slower by the end */
    /*
    animation-delay: 3s;
    animation-iteration-count: 3; /* how many times should the animation happen
    */
}

.heading-primary-sub {
    display:block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;

    animation: moveInRight 1s ease-out;
}

/* ANIMATIONS ----------------------------- */
/* best to use with opacity and transfer - the browsers handle these best */
@keyframes moveInLeft {
    /* 0% before the animation starts
    100% when the animation finishes */
    0% {
        opacity: 0; /* invisible */
        transform: translateX(-100px);
    }
    80% {
        transform: translateX(10px); /* goes 20px to the right of the final position */
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    /* 0% before the animation starts
    100% when the animation finishes */
    0% {
        opacity: 0; /* invisible */
        transform: translateX(100px);
    }
    80% {
        transform: translateX(-10px); /* goes 20px to the right of the final position */
    }
    100% {
        opacity: 1;
        transform: translate(0);
    }
}